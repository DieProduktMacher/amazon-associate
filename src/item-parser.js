// Generated by CoffeeScript 1.6.3
var EventEmitter, sax, _,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

EventEmitter = require('events').EventEmitter;

_ = require('underscore');

sax = require('sax');

module.exports = (function(_super) {
  __extends(_Class, _super);

  function _Class() {
    var _this = this;
    this.items = [];
    this.mode = 'search-item-list';
    this.parser = sax.parser(false);
    this.parser.onerror = function(err) {
      return _this.emit('error', err);
    };
    this.parser.onend = function() {
      return _this.emit('end', _this.items);
    };
    this.parser.onopentag = function(_arg) {
      var attributes, item, name;
      name = _arg.name, attributes = _arg.attributes;
      if (_this.mode === 'search-item-list' && name === 'ITEMS') {
        _this.mode = 'next-item';
      }
      if (_this.mode === 'next-item' && name === 'ITEM') {
        item = {};
        _.each(_.keys(attributes), function(key) {
          return item[key.toLowerCase()] = attributes[key];
        });
        return _this.items.push(item);
      }
    };
  }

  _Class.prototype.write = function(data) {
    return this.parser.write(data);
  };

  _Class.prototype.close = function() {
    return this.parser.close();
  };

  return _Class;

})(EventEmitter);
